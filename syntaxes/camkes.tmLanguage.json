{
	"name": "camkes",
	"scopeName": "source.camkes",
	"patterns": [
		{
			"name": 	"comment.block.documentation.camkes",
			"match": 	"(\/\/)([^\n\r]+)"
		},
		{
			"include": "#comments"
		},
		
		{
			"include": "#camkes_structure_keywords"
		},
		{
			"include": "#component"
		},
		{
			"include": "#connection"
		},
		{
			"include": "#seL4_notifications"
		},
		{
			"match": "\\b(NULL|true|false|TRUE|FALSE)\\b",
			"name": "constant.language.camkes"
		},
		{
			"include": "#types_var"
		},
		{
			"include": "#storage_modifiers"
		},
		{
			"match": "\\bk[A-Z]\\w*\\b",
			"name": "constant.other.variable.mac-classic.camkes"
		},
		{
			"match": "\\bg[A-Z]\\w*\\b",
			"name": "variable.other.readwrite.global.mac-classic.camkes"
		},
		{
			"match": "\\bs[A-Z]\\w*\\b",
			"name": "variable.other.readwrite.static.mac-classic.camkes"
		}, 
		{
			"include": "#function-innards"
		}, 
		{
			"match": ";",
			"name": "punctuation.terminator.statement.camkes"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#curly_brackets"
		},
		{
			"include": "#line_continuation_character"
		},
		{
			
			"begin": "(#define)|(#undef)|(#IFNDEF)",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.directive.define.camkes"	
				}
			},
			"end": 	"(?=(?://|/\\*))|(?<!\\\\)(?=\\n)",
			"name": "meta.preprocessor.macro.camkes",
			"patterns": [
				{
					"match": "[a-zA-Z_$][\\w$]*",
					"name": "entity.name.function.preprocessor.camkes"
				},
				{
					"include": "#line_continuation_character"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#posix_var"
				},
				{
					"include": "#seL4_notifications"
				}
			]
				
		},
		{
			"begin": "^\\s*(?:((#)\\s*pragma))\\b",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.directive.pragma.c"
				},
				"2": {
					"name": "punctuation.definition.directive.c"
				}
			},
			"end": "(?=(?://|/\\*))|(?<!\\\\)(?=\\n)",
			"name": "meta.preprocessor.pragma.c",
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"match": "[a-zA-Z_$][\\w\\-$]*",
					"name": "entity.other.attribute-name.pragma.preprocessor.c"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#line_continuation_character"
				}
			]
		},
		{
			"name": "entity.name.function.camkes",
			"begin": "(procedure)[a-zA-Z0-9_-]* ",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.directive.define.camkes"	
				},
				"2": {
					"name": "entity.name.function.camkes"
				}
			},
			"end": 	"[a-zA-Z0-9_-]*",
			"patterns": [
				{
					"include": "#curly_brackets"
				},
				{
					"match": "[a-zA-Z0-9_$][\\w$]*",
					"name": "entity.name.function.camkes"
				},
				{
					"include": "#comments"
				}
			]
				
		},
		{
			"match": "import|#include|include",
			"name": "keyword.control.directive.define.camkes"
		},
		{
			"include": "#posix_var"
		},
		{
			"begin": "<",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.camkes"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.camkes"
				}
			},
			"name": "string.quoted.double.c"
		}
	],
	"repository": {
		"strings": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.camkes"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.camkes"
						}
					},
					"name": "string.quoted.double.camkes"
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.camkes"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.camkes"
						}
					},
					"name": "string.quoted.single.camkes"
				}
			]
		},
		"camkes_structure_keywords":{
			"name": 		"keyword.control.camkes",
			"match": 		"assembly|composition|configuration|procedures"
			
		},
		"component":{
			"name": 		"meta.preprocessor.camkes",
			"match": 		"component"
		},
		"curly_brackets":{
			"name": 		"punctuation.section.block.begin.bracket.curly.camkes",
			"match": 		"\\b({|})\\b"
		},
		"seL4_notifications":{
			"name": 		"support.type.posix-reserved.camkes",
			"match": 		"\\b(seL4Notification|seL4NotificationNative|seL4RPCCall|seL4SharedData)\\b"	
		},
		"connection":{
			"name": 		"meta.preprocessor.camkes",
			"match": 		"connection"
		},
		"comments": {
			"name": "comment.block.documentation.camkes",
			"begin": "((?>\\s*)\\/\\*+(?:(?:\\n|$)|(?=\\s)))",
			"beginCaptures": {
				"name": "punctuation.definition.comment.begin.documentation.camkes"
			},
			"end": "([!*]*\\*\\/)",
			"endCaptures": {
				"name": "punctuation.definition.comment.end.documentation.camkes"
			}
		},
		"types_var": {
			"name": 	"meta.preprocessor.camkes",
			"match": 	"\\b(const|int|integer|int64_t|uint64_t|int16_t|uint16_t|int32_t|uint32_t|int8_t|uint8_t|unsigned|signed|string|struct|void)\\b"
		},
		"posix_var": {
			"name": 	"support.type.posix-reserved.camkes",
			"match": 	"(OS_Error_t)|(size_t)"
		},
		"storage_modifiers": {
			"name": 	"keyword.control.camkes",
			"match": 	"\\b(export|mutex|maybe|out|in|inout|refin|from)\\b"
		},
		"line_continuation_character": {
			"patterns": [
				{
					"match": "(\\\\)\\n",
					"captures": {
						"1": {
							"name": "constant.character.escape.line-continuation.camkes"
						}
					}
				}
			]
		},
		"function-innards": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"name": "meta.function.definition.parameters.camkes",
					"begin": "(?x)\n(?!(?:while|for|do|if|else|switch|catch|enumerate|return|typeid|alignof|alignas|sizeof|[cr]?iterate|and|and_eq|bitand|bitor|compl|not|not_eq|or|or_eq|typeid|xor|xor_eq|alignof|alignas)\\s*\\()\n(\n(?:[A-Za-z_][A-Za-z0-9_]*+|::)++  # actual name\n|\n(?:(?<=operator)(?:[-*&<>=+!]+|\\(\\)|\\[\\]))\n)\n\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.camkes"
						},
						"2": {
							"name": "punctuation.section.parameters.begin.bracket.round.camkes"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.parameters.end.bracket.round.camkes"
						}
					},
					"patterns": [
						{
							"include": "#function-innards"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#storage_modifiers"
						},
						{
							"include": "#posix_var"
						},
						{
							"include": "#types_var"
						},
						{
							"include": "#comments"
						},
						{
							"name": 	"comment.block.documentation.camkes",
							"match": 	"(\/\/)([^\n\r]+)"
						}
					]
				},
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.parens.begin.bracket.round.camkes"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.parens.end.bracket.round.camkes"
						}
					},
					"patterns": [
						{
							"include": "#function-innards"
						}
					]
				}
			]
		}
	}
}
