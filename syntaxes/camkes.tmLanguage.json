{
	"name": "camkes",
	"scopeName": "source.camkes",
	"patterns": [
		{
			"name": 	"comment.block.documentation.camkes",
			"match": 	"(\/\/)([^\n\r]+)"
		},
		{
			"include": "#comments"
		},
		
		{
			"include": "#camkes_structure_keywords"
		},
		{
			"include": "#uses"
		},
		{
			"include": "#provides"
		},
		{
			"include": "#consumes"
		},
		{
			"include": "#emits"
		},
		{
			"include": "#connection"
		},
		{
			"include": "#seL4_notifications"
		},
		{
			"match": "\\b(NULL|true|false|TRUE|FALSE)\\b",
			"name": "constant.language.camkes"
		},
		{
			"include": "#types_var"
		},
		{
			"include": "#storage_modifiers"
		},
		{
			"match": "\\bk[A-Z]\\w*\\b",
			"name": "constant.other.variable.mac-classic.camkes"
		},
		{
			"match": "\\bg[A-Z]\\w*\\b",
			"name": "variable.other.readwrite.global.mac-classic.camkes"
		},
		{
			"match": "\\bs[A-Z]\\w*\\b",
			"name": "variable.other.readwrite.static.mac-classic.camkes"
		}, 
		{
			"include": "#function-innards"
		}, 
		
		{
			"include": "#strings"
		},
		{
			"include": "#curly_brackets"
		},
		{
			"include": "#line_continuation_character"
		},
		{
			"include": "#component"
		},
		{
			"match": "(control )|(emits )|(consumes )|(uses )"
		},
		{
			"name": "meta.preprocessor.macro.c",
			"begin": "((?:(?:(?>\\s+)|(\\/\\*)((?>(?:[^\\*]|(?>\\*+)[^\\/])*)((?>\\*+)\\/)))+?|(?:(?:(?:(?:\\b|(?<=\\W))|(?=\\W))|\\A)|\\Z)))((#)\\s*define\\b)\\s+((?<!\\w)[a-zA-Z_]\\w*(?!\\w))(?:(\\()([^()\\\\]+)(\\)))?",
			"beginCaptures": {
				"1": {
					"patterns": [
						{
							"include": "#inline_comment"
						}
					]
				},
				"2": {
					"name": "comment.block.c punctuation.definition.comment.begin.c"
				},
				"3": {
					"name": "comment.block.c"
				},
				"4": {
					"patterns": [
						{
							"match": "\\*\\/",
							"name": "comment.block.c punctuation.definition.comment.end.c"
						},
						{
							"match": "\\*",
							"name": "comment.block.c"
						}
					]
				},
				"5": {
					"name": "keyword.control.directive.define.c"
				},
				"6": {
					"name": "punctuation.definition.directive.c"
				},
				"7": {
					"name": "entity.name.function.preprocessor.c"
				},
				"8": {
					"name": "punctuation.definition.parameters.begin.c"
				},
				"9": {
					"patterns": [
						{
							"match": "(?<=[(,])\\s*((?<!\\w)[a-zA-Z_]\\w*(?!\\w))\\s*",
							"captures": {
								"1": {
									"name": "variable.parameter.preprocessor.c"
								}
							}
						},
						{
							"match": ",",
							"name": "punctuation.separator.parameters.c"
						},
						{
							"match": "\\.\\.\\.",
							"name": "ellipses.c punctuation.vararg-ellipses.variable.parameter.preprocessor.c"
						}
					]
				},
				"10": {
					"name": "punctuation.definition.parameters.end.c"
				}
			},
			"end": "(?<!\\\\)(?=\\n)",
			"patterns": [
				{
					"include": "#preprocessor-rule-define-line-contents"
				}
			]
		},
		
		{
			"name": 	"keyword.control.camkes",
			"match": 	"->|<-"
		},
		{
			"name": 	"keyword.control.camkes",
			"match": 	"(#endif)|(#elseif)|(#else)"
		},
		{
			"begin": "^\\s*(?:((#)\\s*ifdef))\\b",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.directive.pragma.c"
				},
				"2": {
					"name": "punctuation.definition.directive.c"
				}
			},
			"end": "(?=(?://|/\\*))|(?<!\\\\)(?=\\n)",
			"name": "meta.preprocessor.pragma.c",
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"match": "[a-zA-Z_$][\\w\\-$]*",
					"name": "meta.preprocessor.camkes"
				},
				{
					"include": "#line_continuation_character"
				}
			]
		},
		{
			"begin": "^\\s*(?:((#)\\s*pragma))\\b",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.directive.pragma.c"
				},
				"2": {
					"name": "punctuation.definition.directive.c"
				}
			},
			"end": "(?=(?://|/\\*))|(?<!\\\\)(?=\\n)",
			"name": "meta.preprocessor.pragma.c",
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"match": "[a-zA-Z_$][\\w\\-$]*",
					"name": "entity.other.attribute-name.pragma.preprocessor.c"
				},
				{
					"include": "#line_continuation_character"
				}
			]
		},
		
		{
			"name": "entity.name.function.camkes",
			"begin": "(procedure)[a-zA-Z0-9_-]* ",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.directive.define.camkes"	
				},
				"2": {
					"name": "entity.name.function.camkes"
				}
			},
			"end": 	"[a-zA-Z0-9_-]*",
			"patterns": [
				{
					"include": "#curly_brackets"
				},
				{
					"match": "[a-zA-Z0-9_$][\\w$]*",
					"name": "entity.name.function.camkes"
				},
				{
					"include": "#comments"
				}
			]
				
		},
		
		{
			"include": "#posix_var"
		},
		{
			"include": "#camkes_declarations"
		},
		{
			"begin": "import|#include|include",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.directive.define.camkes"
				}
			},
			"end": "(>)|(;)|\n",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.camkes"
				}
			},
			"name": "string.quoted.double.camkes"
		},
		{
			"include": "#terminator"
		}
	],
	"repository": {
		"preprocessor-rule-define-line-contents": {
			"patterns": [
				{
					"include": "#vararg_ellipses"
				},
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.block.begin.bracket.curly.c"
						}
					},
					"end": "}|(?=\\s*#\\s*(?:elif|else|endif)\\b)|(?<!\\\\)(?=\\s*\\n)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.block.end.bracket.curly.c"
						}
					},
					"name": "meta.block.c",
					"patterns": [
						{
							"include": "#preprocessor-rule-define-line-blocks"
						}
					]
				},
				{
					"match": "\\(",
					"name": "punctuation.section.parens.begin.bracket.round.c"
				},
				{
					"match": "\\)",
					"name": "punctuation.section.parens.end.bracket.round.c"
				},
				{
					"begin": "(?x)\n(?!(?:while|for|do|if|else|switch|catch|enumerate|return|typeid|alignof|alignas|sizeof|[cr]?iterate|and|and_eq|bitand|bitor|compl|not|not_eq|or|or_eq|typeid|xor|xor_eq|alignof|alignas|asm|__asm__|auto|bool|_Bool|char|_Complex|double|enum|float|_Imaginary|int|long|short|signed|struct|typedef|union|unsigned|void)\\s*\\()\n(?=\n  (?:[A-Za-z_][A-Za-z0-9_]*+|::)++\\s*\\(  # actual name\n  |\n  (?:(?<=operator)(?:[-*&<>=+!]+|\\(\\)|\\[\\]))\\s*\\(\n)",
					"end": "(?<=\\))(?!\\w)|(?<!\\\\)(?=\\s*\\n)",
					"name": "meta.function.c",
					"patterns": [
						{
							"include": "#preprocessor-rule-define-line-functions"
						}
					]
				},
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.c"
						}
					},
					"end": "\"|(?<!\\\\)(?=\\s*\\n)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.c"
						}
					},
					"name": "string.quoted.double.c",
					"patterns": [
						{
							"include": "#string_escaped_char"
						},
						{
							"include": "#string_placeholder"
						},
						{
							"include": "#line_continuation_character"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.c"
						}
					},
					"end": "'|(?<!\\\\)(?=\\s*\\n)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.c"
						}
					},
					"name": "string.quoted.single.c",
					"patterns": [
						{
							"include": "#string_escaped_char"
						},
						{
							"include": "#line_continuation_character"
						},
						{
							"match": ";",
							"name": "punctuation.terminator.statement.camkes"
						}
					]
				},
				{
					"include": "#method_access"
				},
				{
					"include": "#member_access"
				},
				{
					"include": "$base"
				}
			]
		},
		"method_access": {
			"contentName": "meta.function-call.member.c",
			"begin": "((?:[a-zA-Z_]\\w*|(?<=\\]|\\)))\\s*)(?:((?:\\.\\*|\\.))|((?:->\\*|->)))((?:[a-zA-Z_]\\w*\\s*(?:(?:(?:\\.\\*|\\.))|(?:(?:->\\*|->)))\\s*)*)\\s*([a-zA-Z_]\\w*)(\\()",
			"beginCaptures": {
				"1": {
					"name": "variable.other.object.access.c"
				},
				"2": {
					"name": "punctuation.separator.dot-access.c"
				},
				"3": {
					"name": "punctuation.separator.pointer-access.c"
				},
				"4": {
					"patterns": [
						{
							"include": "#member_access"
						},
						{
							"include": "#method_access"
						},
						{
							"match": "((?:[a-zA-Z_]\\w*|(?<=\\]|\\)))\\s*)(?:((?:\\.\\*|\\.))|((?:->\\*|->)))",
							"captures": {
								"1": {
									"name": "variable.other.object.access.c"
								},
								"2": {
									"name": "punctuation.separator.dot-access.c"
								},
								"3": {
									"name": "punctuation.separator.pointer-access.c"
								}
							}
						}
					]
				},
				"5": {
					"name": "entity.name.function.member.c"
				},
				"6": {
					"name": "punctuation.section.arguments.begin.bracket.round.function.member.c"
				}
			},
			"end": "(\\))",
			"endCaptures": {
				"1": {
					"name": "punctuation.section.arguments.end.bracket.round.function.member.c"
				}
			},
			"patterns": [
				{
					"include": "#function-call-innards"
				}
			]
		},
		"member_access": {
			"match": "((?:[a-zA-Z_]\\w*|(?<=\\]|\\)))\\s*)(?:((?:\\.\\*|\\.))|((?:->\\*|->)))((?:[a-zA-Z_]\\w*\\s*(?:(?:(?:\\.\\*|\\.))|(?:(?:->\\*|->)))\\s*)*)\\s*(\\b(?!(?:atomic_uint_least64_t|atomic_uint_least16_t|atomic_uint_least32_t|atomic_uint_least8_t|atomic_int_least16_t|atomic_uint_fast64_t|atomic_uint_fast32_t|atomic_int_least64_t|atomic_int_least32_t|pthread_rwlockattr_t|atomic_uint_fast16_t|pthread_mutexattr_t|atomic_int_fast16_t|atomic_uint_fast8_t|atomic_int_fast64_t|atomic_int_least8_t|atomic_int_fast32_t|atomic_int_fast8_t|pthread_condattr_t|atomic_uintptr_t|atomic_ptrdiff_t|pthread_rwlock_t|atomic_uintmax_t|pthread_mutex_t|atomic_intmax_t|atomic_intptr_t|atomic_char32_t|atomic_char16_t|pthread_attr_t|atomic_wchar_t|uint_least64_t|uint_least32_t|uint_least16_t|pthread_cond_t|pthread_once_t|uint_fast64_t|uint_fast16_t|atomic_size_t|uint_least8_t|int_least64_t|int_least32_t|int_least16_t|pthread_key_t|atomic_ullong|atomic_ushort|uint_fast32_t|atomic_schar|atomic_short|uint_fast8_t|int_fast64_t|int_fast32_t|int_fast16_t|atomic_ulong|atomic_llong|int_least8_t|atomic_uchar|memory_order|suseconds_t|int_fast8_t|atomic_bool|atomic_char|atomic_uint|atomic_long|atomic_int|useconds_t|_Imaginary|blksize_t|pthread_t|in_addr_t|uintptr_t|in_port_t|uintmax_t|uintmax_t|blkcnt_t|uint16_t|unsigned|_Complex|uint32_t|intptr_t|intmax_t|intmax_t|uint64_t|u_quad_t|int64_t|int32_t|ssize_t|caddr_t|clock_t|uint8_t|u_short|swblk_t|segsz_t|int16_t|fixpt_t|daddr_t|nlink_t|qaddr_t|size_t|time_t|mode_t|signed|quad_t|ushort|u_long|u_char|double|int8_t|ino_t|uid_t|pid_t|_Bool|float|dev_t|div_t|short|gid_t|off_t|u_int|key_t|id_t|uint|long|void|char|bool|id_t|int)\\b)[a-zA-Z_]\\w*\\b(?!\\())",
			"captures": {
				"1": {
					"name": "variable.other.object.access.c"
				},
				"2": {
					"name": "punctuation.separator.dot-access.c"
				},
				"3": {
					"name": "punctuation.separator.pointer-access.c"
				},
				"4": {
					"patterns": [
						{
							"include": "#member_access"
						},
						{
							"include": "#method_access"
						},
						{
							"match": "((?:[a-zA-Z_]\\w*|(?<=\\]|\\)))\\s*)(?:((?:\\.\\*|\\.))|((?:->\\*|->)))",
							"captures": {
								"1": {
									"name": "variable.other.object.access.c"
								},
								"2": {
									"name": "punctuation.separator.dot-access.c"
								},
								"3": {
									"name": "punctuation.separator.pointer-access.c"
								}
							}
						}
					]
				},
				"5": {
					"name": "variable.other.member.c"
				}
			}
		},
		"camkes_structure_keywords":{
			"name": 		"keyword.control.camkes",
			"match": 		"assembly|composition|configuration|procedures"
			
		},
		"curly_brackets":{
			"name": 		"punctuation.section.block.begin.bracket.curly.camkes",
			"match": 		"\\b({|})\\b"
		},
		"connection":{
			"name": 		"meta.preprocessor.camkes",
			"match": 		"connection"
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.documentation.c",
					"begin": "(?:^)(?>\\s*)(\\/\\/[!\\/]+)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.documentation.c"
						}
					},
					"end": "(?<=\\n)(?<!\\\\\\n)",
					"patterns": [
						{
							"include": "#line_continuation_character"
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))\\s+(\\S+)",
							"captures": {
								"1": {
									"name": "storage.type.class.doxygen.c"
								},
								"2": {
									"name": "markup.italic.doxygen.c"
								}
							}
						},
						{
							"match": "((?<=[\\s*!\\/])[\\\\@]b)\\s+(\\S+)",
							"captures": {
								"1": {
									"name": "storage.type.class.doxygen.c"
								},
								"2": {
									"name": "markup.bold.doxygen.c"
								}
							}
						},
						{
							"match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))\\s+(\\S+)",
							"captures": {
								"1": {
									"name": "storage.type.class.doxygen.c"
								},
								"2": {
									"name": "markup.inline.raw.string.c"
								}
							}
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?\\s*(?:in|out)\\s*)+)\\])?\\s+(\\b\\w+\\b)",
							"captures": {
								"1": {
									"name": "storage.type.class.doxygen.c"
								},
								"2": {
									"patterns": [
										{
											"match": "in|out",
											"name": "keyword.other.parameter.direction.$0.c"
										}
									]
								},
								"3": {
									"name": "variable.parameter.c"
								}
							}
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|uml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
							"name": "storage.type.class.gtkdoc"
						}
					]
				},
				{
					"match": "(\\/\\*[!*]+(?=\\s))(.+)([!*]*\\*\\/)",
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.begin.documentation.c"
						},
						"2": {
							"patterns": [
								{
									"match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
									"name": "storage.type.class.doxygen.c"
								},
								{
									"match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))\\s+(\\S+)",
									"captures": {
										"1": {
											"name": "storage.type.class.doxygen.c"
										},
										"2": {
											"name": "markup.italic.doxygen.c"
										}
									}
								},
								{
									"match": "((?<=[\\s*!\\/])[\\\\@]b)\\s+(\\S+)",
									"captures": {
										"1": {
											"name": "storage.type.class.doxygen.c"
										},
										"2": {
											"name": "markup.bold.doxygen.c"
										}
									}
								},
								{
									"match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))\\s+(\\S+)",
									"captures": {
										"1": {
											"name": "storage.type.class.doxygen.c"
										},
										"2": {
											"name": "markup.inline.raw.string.c"
										}
									}
								},
								{
									"match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
									"name": "storage.type.class.doxygen.c"
								},
								{
									"match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
									"name": "storage.type.class.doxygen.c"
								},
								{
									"match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?\\s*(?:in|out)\\s*)+)\\])?\\s+(\\b\\w+\\b)",
									"captures": {
										"1": {
											"name": "storage.type.class.doxygen.c"
										},
										"2": {
											"patterns": [
												{
													"match": "in|out",
													"name": "keyword.other.parameter.direction.$0.c"
												}
											]
										},
										"3": {
											"name": "variable.parameter.c"
										}
									}
								},
								{
									"match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
									"name": "storage.type.class.doxygen.c"
								},
								{
									"match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|uml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
									"name": "storage.type.class.doxygen.c"
								},
								{
									"match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
									"name": "storage.type.class.gtkdoc"
								}
							]
						},
						"3": {
							"name": "punctuation.definition.comment.end.documentation.c"
						}
					},
					"name": "comment.block.documentation.c"
				},
				{
					"name": "comment.block.documentation.c",
					"begin": "((?>\\s*)\\/\\*[!*]+(?:(?:\\n|$)|(?=\\s)))",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.begin.documentation.c"
						}
					},
					"end": "([!*]*\\*\\/)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.comment.end.documentation.c"
						}
					},
					"patterns": [
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))\\s+(\\S+)",
							"captures": {
								"1": {
									"name": "storage.type.class.doxygen.c"
								},
								"2": {
									"name": "markup.italic.doxygen.c"
								}
							}
						},
						{
							"match": "((?<=[\\s*!\\/])[\\\\@]b)\\s+(\\S+)",
							"captures": {
								"1": {
									"name": "storage.type.class.doxygen.c"
								},
								"2": {
									"name": "markup.bold.doxygen.c"
								}
							}
						},
						{
							"match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))\\s+(\\S+)",
							"captures": {
								"1": {
									"name": "storage.type.class.doxygen.c"
								},
								"2": {
									"name": "markup.inline.raw.string.c"
								}
							}
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?\\s*(?:in|out)\\s*)+)\\])?\\s+(\\b\\w+\\b)",
							"captures": {
								"1": {
									"name": "storage.type.class.doxygen.c"
								},
								"2": {
									"patterns": [
										{
											"match": "in|out",
											"name": "keyword.other.parameter.direction.$0.c"
										}
									]
								},
								"3": {
									"name": "variable.parameter.c"
								}
							}
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|uml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
							"name": "storage.type.class.doxygen.c"
						},
						{
							"match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
							"name": "storage.type.class.gtkdoc"
						}
					]
				},
				{
					"match": "^\\/\\* =(\\s*.*?)\\s*= \\*\\/$\\n?",
					"captures": {
						"1": {
							"name": "meta.toc-list.banner.block.c"
						}
					},
					"name": "comment.block.banner.c"
				},
				{
					"name": "comment.block.c",
					"begin": "(\\/\\*)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.begin.c"
						}
					},
					"end": "(\\*\\/)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.comment.end.c"
						}
					}
				},
				{
					"match": "^\\/\\/ =(\\s*.*?)\\s*=$\\n?",
					"captures": {
						"1": {
							"name": "meta.toc-list.banner.line.c"
						}
					},
					"name": "comment.line.banner.c"
				},
				{
					"begin": "((?:^[ \\t]+)?)(?=\\/\\/)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.c"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"name": "comment.line.double-slash.c",
							"begin": "(\\/\\/)",
							"beginCaptures": {
								"1": {
									"name": "punctuation.definition.comment.c"
								}
							},
							"end": "(?=\\n)",
							"patterns": [
								{
									"include": "#line_continuation_character"
								}
							]
						}
					]
				}
			]
		},
		"camkes_declarations":{
			"begin": 		"(dataport[ ]+)|(control[ ]+)|(provides[ ]+)|(emits[ ]+)|(Vector[ ]+)|(export[ ]+)|(has[ ]+)|(consumes[ ]+)|(uses[ ]+)|(attribute[ ]+)|(component[ ]+)",
			"beginCaptures": {
				"0": {
					"name": "meta.preprocessor.camkes"
				}
			},
			"end": "[a-zA-Z0-9_-]*",
			"endCaptures": {
				"0": {
					"name": "support.type.posix-reserved.camkes"
				}
			}
	
		},
		"component":{
			"begin": 		"(component[ ]+)",
			"beginCaptures": {
				"1": {
					"name": "meta.preprocessor.camkes"
				}
			},
			"end": "[a-zA-Z0-9_-]*",
			"endCaptures": {
				"0": {
					"name": "support.type.posix-reserved.camkes"
				}
			}
	
		},
		"function-innards": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"name": "meta.function.definition.parameters.camkes",
					"begin": "(?x)\n(?!(?:while|for|do|if|else|switch|catch|enumerate|return|typeid|alignof|alignas|sizeof|[cr]?iterate|and|and_eq|bitand|bitor|compl|not|not_eq|or|or_eq|typeid|xor|xor_eq|alignof|alignas)\\s*\\()\n(\n(?:[A-Za-z_][A-Za-z0-9_]*+|::)++  # actual name\n|\n(?:(?<=operator)(?:[-*&<>=+!]+|\\(\\)|\\[\\]))\n)\n\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.camkes"
						},
						"2": {
							"name": "punctuation.section.parameters.begin.bracket.round.camkes"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.parameters.end.bracket.round.camkes"
						}
					},
					"patterns": [
						{
							"include": "#function-innards"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#storage_modifiers"
						},
						{
							"include": "#posix_var"
						},
						{
							"include": "#types_var"
						},
						{
							"include": "#comments"
						},
						{
							"name": 	"comment.block.documentation.camkes",
							"match": 	"(\/\/)([^\n\r]+)"
						},
						{
							"include": "#line_continuation_character"
						}
					]
				},
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.parens.begin.bracket.round.camkes"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.parens.end.bracket.round.camkes"
						}
					},
					"patterns": [
						{
							"include": "#function-innards"
						}
					]
				}
			]
		},
		"line_continuation_character": {
			"patterns": [
				{
					"match": "(\\\\)\\n",
					"captures": {
						"1": {
							"name": "constant.character.escape.line-continuation.camkes"
						}
					}
				}
			]
		},
		"terminator": {
			"match": ";",
			"name": "punctuation.terminator.statement.camkes"
		},
		"posix_var": {
			"name": 	"support.type.posix-reserved.camkes",
			"match": 	"(OS_Error_t)|(size_t)|(Buf)|dataport_ptr_t|intptr_t"
		},
		"seL4_notifications":{
			"name": 		"support.type.posix-reserved.camkes",
			"match": 		"\\b(seL4Ethdriver|seL4GlobalAsynchCallback|seL4GlobalAsync|seL4MessageQueue|seL4RPCCallSignal|seL4RPCDataport|seL4RPCDataportSignal|seL4RPCOverMultiSharedData|seL4RPCOverMultiSharedData|seL4VirtQueues|seL4DirectCall|seL4Notification|seL4NotificationBind|seL4NotificationNative|seL4NotificationQueue|seL4RPCCall|seL4DTBHardware|seL4RPCCallNoType|seL4SharedData|seL4HardwareMMIO|seL4HardwareIOPort|seL4HardwareInterrupt|seL4IOAPICHardwareInterrupt)\\b"	
		},
		"storage_modifiers": {
			"name": 	"keyword.control.camkes",
			"match": 	"\\b(export|mutex|maybe|out|in|control|inout|refin|from|to)\\b"
		},
		"strings": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.camkes"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.camkes"
						}
					},
					"name": "string.quoted.double.camkes"
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.camkes"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.camkes"
						}
					},
					"name": "string.quoted.single.camkes"
				}
			]
		},
		"types_var": {
			"name": 	"meta.preprocessor.camkes",
			"match": 	"\\b(const|int|integer|int64_t|uint64_t|int16_t|uint16_t|int32_t|uint32_t|int8_t|uint8_t|unsigned|signed|string|struct|void)\\b"
		},
		"uses":{
	
			"begin": 		"(uses[ ]+)",
			"beginCaptures": {
				"1": {
					"name": "meta.preprocessor.camkes"
				}
			},
			"end": "[a-zA-Z0-9_-]*",
			"endCaptures": {
				"0": {
					"name": "support.type.posix-reserved.camkes"
				}
			}
	
		},
		"provides":{
	
			"begin": 		"(provides[ ]+)",
			"beginCaptures": {
				"1": {
					"name": "meta.preprocessor.camkes"
				}
			},
			"end": "[a-zA-Z0-9_-]*",
			"endCaptures": {
				"0": {
					"name": "support.type.posix-reserved.camkes"
				}
			}
	
		},
		"consumes":{
	
			"begin": 		"(consumes[ ]+)",
			"beginCaptures": {
				"1": {
					"name": "meta.preprocessor.camkes"
				}
			},
			"end": "[a-zA-Z0-9_-]*",
			"endCaptures": {
				"0": {
					"name": "support.type.posix-reserved.camkes"
				}
			}
	
		},
		"emits":{
	
			"begin": 		"(emits[ ]+)",
			"beginCaptures": {
				"1": {
					"name": "meta.preprocessor.camkes"
				}
			},
			"end": "[a-zA-Z0-9_-]*",
			"endCaptures": {
				"0": {
					"name": "support.type.posix-reserved.camkes"
				}
			}
	
		}
	}
}
